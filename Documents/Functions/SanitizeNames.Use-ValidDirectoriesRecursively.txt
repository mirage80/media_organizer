Function:
SanitizeNames.Use-ValidDirectoriesRecursively

Description:
Recursively filters and returns only the valid subdirectories from a root path. Directories are validated using specific naming rules.

Input Type:
1. rootPath [string] — Root directory to search under.

Output Type:
✅ [string[]] — List of valid subdirectory paths
❌ Returns empty list if none found or input invalid

Algorithm (Pseudo-code):

1. Validate Input
  1.1. If rootPath is null or doesn’t exist → return empty list

2. Recursively Get All Subdirectories
  2.1. Call Get-ChildItem -Directory -Recurse

3. Filter Valid Directory Names
  3.1. For each subdirectory:
    3.1.1 Call SanitizeNames.Use-ValidDirectoryName() to validate name
    3.1.2 If valid → include in result

4. Return filtered list of valid directories

Function Calls:
- SanitizeNames.Use-ValidDirectoryName — Validates directory names based on custom rules

Possible Issues:
✅ Covered: Nonexistent or null root path (handled early)
✅ Covered: Invalid directory names (filtered using helper)
✅ Covered: Recursion works for nested directories
❌ Not Covered: Errors thrown by Get-ChildItem (e.g., permission denied)
✅ Covered: Returns empty list gracefully
