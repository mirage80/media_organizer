📍 MediaTools.Select-ValidGeotag Function Documentation

Description:
Checks if a group of geotags are all clustered together within a specified distance. It uses the first valid geotag in the list as a reference point and verifies that all other valid geotags are within the distance threshold of it.

Input Type:
1. GeoTags [string[]] — An array of 4-part geotag strings to compare.
2. threshold_meters [double] (Optional, Default: 100.0) — The maximum allowed distance in meters for the cluster.

Output Type:
✅ [bool] — `True` if all valid geotags are clustered within the threshold.
❌ Returns `False` if any point is outside the threshold or if no valid reference point can be found.

Algorithm (Pseudo-code):
1. If the input array has fewer than 2 items, return `$true`.
2. Find the first valid geotag in the array to use as a reference point. If none is found, return `$false`.
3. Parse the reference geotag's coordinates.
4. Loop through every other valid geotag in the array.
5. For each one, parse its coordinates and calculate the Haversine distance from the reference point.
6. If any distance is greater than `threshold_meters`, immediately return `$false`.
7. If the loop completes, all points are within the cluster, so return `$true`.

Function Calls:
🔹 Test-GeoTag

Possible Issues:
* ✅ Covered: Handles lists with invalid or zero geotags by skipping them during comparison.
* ✅ Covered: Uses the robust Haversine formula for accurate distance calculation.
* ✅ Covered: Customizable distance threshold.
* ❌ Not Covered: The performance may degrade on very large lists of geotags due to the O(n) comparisons.
