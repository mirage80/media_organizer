🕒 MediaTools.Set-Timestamp Function Documentation

Description:
Writes a given timestamp to all relevant timestamp fields for a specific media file. It dynamically determines the correct fields to write to based on the file's extension.

Input Type:
1. File [System.IO.FileInfo] (Mandatory) — The media file to write to.
2. TimeStamp [string] (Mandatory) — The standardized timestamp string to write.
3. TimeoutSeconds [int] (Optional, Default: 60) — The timeout to pass down to the underlying ExifTool process.

Output Type:
✅ [void] — This function does not return a value.
❌ Throws an exception if the input timestamp is invalid or if the underlying ExifTool command fails.

Algorithm:
1. Validate that the input `File` exists and that the `TimeStamp` is valid using `Test-Timestamp`.
2. Get the list of appropriate timestamp fields for the file's extension using `Get-FieldsByExtension`.
3. If no fields are defined for the extension, log a warning and exit.
4. Construct the ExifTool arguments array by creating a `-TagName='timestamp'` entry for each field.
5. Add the `-overwrite_original` argument to prevent ExifTool from creating backup files.
6. Call `Invoke-ExifTool` with the arguments, file, and timeout to execute the write operation.

Function Calls:
🔹 Test-Timestamp
🔹 Get-FieldsByExtension
🔹 Invoke-ExifTool

Possible Issues:
* ✅ Covered: Dynamically writes to the correct set of timestamp fields based on file type (.jpg, .mov, etc.).
* ✅ Covered: Ensures the input timestamp is valid before attempting to write.
* ✅ Covered: Delegates the actual write operation to the robust, caching `Invoke-ExifTool` function.
