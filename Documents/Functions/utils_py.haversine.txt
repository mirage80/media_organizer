Function Name:
utils.haversine

Description:
Computes the great-circle distance (in kilometers) between two GPS coordinates using the Haversine formula.

Input Fields:
1. lat1 [float] — Latitude of point 1 in decimal degrees
2. lon1 [float] — Longitude of point 1 in decimal degrees
3. lat2 [float] — Latitude of point 2 in decimal degrees
4. lon2 [float] — Longitude of point 2 in decimal degrees

Output Type:
✅ [float] — Distance in kilometers between the two points
❌ Returns 0.0 if inputs are invalid

Algorithm:
1. Convert degrees to radians
  1.1 lat1_rad = radians(lat1)
  1.2 lon1_rad = radians(lon1)
  1.3 lat2_rad = radians(lat2)
  1.4 lon2_rad = radians(lon2)
2. Compute delta values
  2.1 delta_lat = lat2_rad - lat1_rad
  2.2 delta_lon = lon2_rad - lon1_rad
3. Apply haversine formula
  3.1 a = sin²(delta_lat / 2) + cos(lat1_rad) * cos(lat2_rad) * sin²(delta_lon / 2)
  3.2 c = 2 * atan2(√a, √(1 - a))
  3.3 distance = Earth's radius (6371 km) × c
4. Return distance

Possible Issues:
* ✅ Accurate for small and large distances
* ✅ Handles inputs in degrees
* ❌ Does not validate latitude/longitude ranges
* ❌ Returns 0.0 silently for invalid input types
