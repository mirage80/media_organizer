🗺️ MediaTools.Find-ValidGeotag Function Documentation

Function:
Find-ValidGeotag

Description:
Searches a metadata hashtable for the first valid geotag and returns it in standardized decimal format.

Input Type:
1. $metadata [hashtable] — A hashtable containing geolocation-related metadata from various sources

Output Type:
✅ [hashtable] — Contains standardized "Latitude" and "Longitude" keys with decimal values
❌ [null] — If no valid geotag is found or input is invalid

Algorithm (Pseudo-code):
1. If $metadata is null or empty
   → Return null

2. Define list of known geotag fields to check (e.g., GPSLatitude, GPSLongitude, Location, etc.)

3. For each candidate field or combination:
   3.1 Extract potential latitude and longitude
   3.2 Call IsValid_GeoTag on the pair
       → If valid:
           a. Standardize using Standardize_GeoTag
           b. Return as hashtable: @{ Latitude = ..., Longitude = ... }

4. If no valid geotag found after all checks:
   → Return null

Function Calls:
🔹 MediaTools.IsValid_GeoTag — Validates latitude/longitude values
🔹 MediaTools.Standardize_GeoTag — Converts raw formats (DMS, ref-based) to decimal degrees

Possible Issues:
✅ Covered: Missing or malformed fields
✅ Covered: Non-decimal formats (e.g., DMS with N/S/E/W refs)
❌ Not Covered: Nested or encoded geolocation fields
❌ Not Covered: Conflicting GPS sources in metadata
❌ Not Covered: Geotags with only one coordinate (lat or lon)
