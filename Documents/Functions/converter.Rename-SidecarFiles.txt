üì¶ converter.Rename-SidecarFiles Function Documentation

Function:
Rename-SidecarFiles

Description:
Renames associated sidecar files (e.g., `.json`, `.xmp`) to match a new base filename derived from a media file after conversion or cleanup.

Input Type:
1. OldPath [string] ‚Äî Full path of the original media file
2. NewPath [string] ‚Äî Full path of the renamed or converted media file
3. Logger [scriptblock] ‚Äî Logging callback to track rename actions (optional)

Output Type:
‚úÖ [void] ‚Äî Sidecar files renamed if present
‚ùå Logs a warning if renaming fails; does not throw

Algorithm (Pseudo-code):
1. Extract Base Names
    1.1 Get old base name (filename without extension) from OldPath
    1.2 Get new base name from NewPath
2. Locate Sidecar Files
    2.1 For each sidecar extension in known list (e.g., .json, .xmp, .thm)
        2.1.1 Construct sidecar file path using OldPath base + extension
        2.1.2 If sidecar file exists:
            a. Construct new sidecar path using NewPath base + extension
            b. Try to rename it using Rename-Item
            c. If success ‚Üí log success with Logger
            d. If failure ‚Üí log warning with Logger

Function Calls:
‚Ä¢ Rename-Item ‚Üí Performs the rename
‚Ä¢ Logger ‚Üí Called to log rename success/failure
‚Ä¢ Test-Path ‚Üí Checks sidecar existence
‚Ä¢ Join-Path, [System.IO.Path]::GetFileNameWithoutExtension ‚Üí Used for base name construction

Possible Issues:
‚Ä¢ ‚úÖ Covered: Sidecar file missing
‚Ä¢ ‚úÖ Covered: Sidecar renaming logged
‚Ä¢ ‚úÖ Covered: Base names correctly extracted
‚Ä¢ ‚ùå Not Covered: Rename-Item fails due to file in use
‚Ä¢ ‚ùå Not Covered: Destination sidecar already exists
‚Ä¢ ‚ùå Not Covered: Logger not provided (may fail silently)
‚Ä¢ ‚ùå Not Covered: Unknown or unlisted sidecar extensions