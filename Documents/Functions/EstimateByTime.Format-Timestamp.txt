Function:
EstimateByTime.Format-Timestamp

Description:
Formats an input datetime string into the standardized timestamp format "yyyy:MM:dd HH:mm:ss+00:00" used throughout the media pipeline.

Input Type:
1. timestamp [string] — Input date-time string (may contain various separators, formats, and time zone notations)

Output Type:
✅ [string] — Formatted timestamp in "yyyy:MM:dd HH:mm:ss+00:00"
❌ Throws FormatException if parsing fails

Algorithm:
1. If timestamp is null or empty
   1.1 Return "0000:00:00 00:00:00+00:00" directly
2. Clean up string
   2.1 Remove non-ASCII characters
   2.2 Replace multiple spaces with a single space
3. Normalize time zone
   3.1 Replace "Z" with +00:00
   3.2 If abbreviation found (e.g., "UTC"), replace with +00:00
   3.3 If no offset found, append +00:00
4. Try known datetime formats in order:
   a. "yyyy:MM:dd HH:mm:sszzz"
   b. "yyyy:MM:dd HH:mm:ss zzz"
   c. "yyyy:MM:dd HH:mm:ss.fffzzz"
   d. "yyyy-MM-ddTHH:mm:sszzz"
   e. "yyyy-MM-dd HH:mm:ss"
   f. "yyyy-MM-ddTHH:mm:ss"
   g. "yyyy-MM-dd HH:mm:ss.fff"
   h. "MM/dd/yyyy HH:mm:ss zzz"
   i. "MMM d, yyyy, h:mm:sstt"
   j. "MMM d, yyyy, h:mm:ss tt"
   k. "MMM d, yyyy, h:mm:ssttzzz"
   l. "yyyy:MM:dd HH:mm:ss.ff zzz"
   m. "yyyy:MM:dd HH:mm:ss.fffzzz"
   n. "yyyy:MM:dd HH:mm:ss"
5. If any parse succeeds
   5.1 Format using "yyyy:MM:dd HH:mm:ss+00:00"
   5.2 Return formatted result
6. If all formats fail
   6.1 Throw FormatException

Possible Issues:
✅ Covered: Null or empty input
✅ Covered: Timestamp with Z timezone
✅ Covered: Timestamp with no timezone
✅ Covered: Timestamp with timezone abbreviation
✅ Covered: Multiple date-time separators (e.g., space, T, slash)
✅ Covered: Trailing milliseconds or fractions
✅ Covered: Human-readable formats like "Jan 2, 2020, 1:23:45PM"
❌ Not Covered: Invalid strings like "DATE_UNKNOWN" (throws FormatException)
❌ Not Covered: Timestamps with invalid month/day values
❌ Not Covered: Non-date text in timestamp (e.g., "mybirthday")
❌ Not Covered: Unexpected locale formats (e.g., "2024年07月04日")
