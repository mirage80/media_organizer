
🛠️ Function: Set-UtilsLogger

📝 Description:
Sets a global logger object for use throughout the Utils module. The logger is expected to support standardized log levels such as DEBUG, INFO, WARNING, and ERROR.

📥 Input Type:
1. logger [object] — A logger object implementing a .log(level, message) or .write(level, message)-style interface

📤 Output Type:
✅ [void] — Sets the internal $global:UtilsLogger variable
❌ Logs error and does not set logger if input is invalid

🔄 Algorithm (Pseudo-code):
1. Validate Logger Input
    1.1 If logger is $null → log warning, return
    1.2 If logger does not have expected methods (Write-Log, etc.) → log warning, return
2. Set Logger
    2.1 Assign logger to $global:UtilsLogger
3. Log Result
    3.1 Use logger (if valid) to log debug: "Utils logger set successfully"

🔧 Function Calls:
🔹 Utils.Write-Log(level, message) — Log status messages during setup
   (⚠️ Utils.Write-Log is called but not yet documented — please confirm before proceeding to that function.)

⚠️ Possible Issues:
✅ Covered: Null or invalid logger input
✅ Covered: Logger without required methods
✅ Covered: Internal logger logs its own setup status
❌ Not Covered: Multiple concurrent logger assignments (not thread-safe)
❌ Not Covered: Side effects from overwriting previously set global logger
❌ Not Covered: Enforcement of logging interface contract (duck typing only)
