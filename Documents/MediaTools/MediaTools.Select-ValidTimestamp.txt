‚è∞ MediaTools.Select-ValidTimestamp Function Documentation

Description:  
Compares two timestamp strings to determine if they refer to the same point in time, within an optional tolerance.

Input Type:
1. timestamp1 [string] ‚Äî The first timestamp string.
2. timestamp2 [string] ‚Äî The second timestamp string.
3. tolerance_seconds [int] (Optional, Default: 0) ‚Äî The maximum allowed difference in seconds for the timestamps to be considered equal.

Output Type:  
‚úÖ [bool] ‚Äî `True` if timestamps are equal or within the specified tolerance  
‚ùå Returns `False` if either timestamp is invalid or the difference exceeds the tolerance.

Algorithm (Pseudo-code):
1. Check if both `timestamp1` and `timestamp2` are valid using `Test-Timestamp`. If either is invalid, return `$false`.
2. Attempt to parse both strings into `[datetimeoffset]` objects using a culture-invariant parser.
3. If parsing fails, return `$false`.
4. Calculate the absolute difference between the two `datetimeoffset` objects in total seconds.
5. Return `$true` if the difference is less than or equal to `tolerance_seconds`, otherwise return `$false`.

Function Calls:
üîπ Test-Timestamp

Possible Issues:
* ‚úÖ Covered: Returns `False` for any invalid or unparsable timestamp, preventing errors.
* ‚úÖ Covered: Supports a tolerance in seconds for flexible "close enough" comparisons.
* ‚úÖ Covered: Accurately compares timestamps even if they have different time zone offsets.
* ‚ùå Not Covered: The comparison is based on total seconds; it does not account for millisecond precision.
