Project To-Do List: Script Review

Main Orchestrator
top.ps1
[x]  A.I. 1: Improve Python error handling in Invoke-PythonScript to capture full tracebacks.
[P2] [ ] A.I. 2: Refactor the main pipeline execution from a sequential list of commands to a data-driven loop.
[P5] [ ] A.I. 3: Consolidate the multiple `Test-Path` checks for external tools (ffmpeg, 7zip, etc.) into a single loop or function.
[x]  A.I. 4: Clean up the initial parameter block to either use the parameters or remove them to reduce confusion.
[P5] [ ] A.I. 5: Add a trap for Ctrl+C (SIGINT) to log a specific "User cancelled" message before exiting.
[x]  A.I. 6: Fix argument splatting for PowerShell script calls to use `@step.Args` instead of `@($step.Args)`.
[x]  A.I. 7: Re-initialize the main logger after each PowerShell step to prevent child scripts from hijacking the log file path.

Utility Modules
Utils\Utils.psm1
[x] A.I. 1: Centralize all logging logic into this module. (Superseded by A.I. 5)
[x] A.I. 2: Create Initialize-Logger and Initialize-ChildScriptLogger helper functions. (Superseded by A.I. 5)
[x] A.I. 3: Improve graphical progress bar handling.
[x]  A.I. 4: Modify Initialize-ChildScriptLogger to write an initial "Script Started" message to guarantee log file creation. (Superseded by A.I. 5)
[x]  A.I. 5: Refactor the logging system to be stateless by creating logger "factory" functions (New-Logger, New-ChildLogger) that auto-generate paths and return a pre-configured script block for logging.
[P2] [ ] A.I. 6: Apply the new stateless logging pattern to all remaining PowerShell child scripts.
Utils\MediaTools.psm1
[x] A.I. 1: Fix return value in categorize_bulk_media_based_on_metadata_keep_directory_structure.
[x] A.I. 2: Refactor Find_and_Write_Valid_Timestamp to be more robust.
[P4] [ ] A.I. 3: Fix bug in `Standardize_GeoTag` where an undefined variable `$stringValue` is used in log messages.
[P4] [ ] A.I. 4: Review and fix multiple functions that have empty `catch` blocks or error messages that are not passed to the `Log` function (e.g., `Find_and_Write_Valid_GeoTag`, `Get_Json_Geotag`).

PowerShell Pipeline Scripts
step1 - Extract\Extract.ps1
[x] A.I. 1: Refactor to use the centralized logging system.
[x]  A.I. 2: Add error handling and logging to the 7-Zip extraction command.
step2 - clean_json_names\CleanJsonNames.ps1
[x] A.I. 1: Refactor to use the centralized logging system.
step3 - clean_json\clean_json.ps1
[x] A.I. 1: Refactor to use the centralized logging system.
[P3] [ ] A.I. 2: Major refactoring to replace the fragile batch file generation and `Invoke-Expression` with direct PowerShell rename operations for improved security and reliability.
[x]  A.I. 3: Define the `$logDir` variable locally to ensure temporary log files are written to the correct `Logs` directory.
step4 - ListandRemoveOrphanedJSON\remove_orphaned_json.ps1
[x] A.I. 1: Refactor to use the centralized logging system.
[P5] [ ] A.I. 2: Refactor the `Purge` function to operate directly on the in-memory array of orphaned files instead of writing to and reading from a temporary file.
[P5] [ ] A.I. 3: Relocate the temporary `orphaned_json_files.txt` from the `Outputs` directory to the `Logs` directory for consistency.
step5 - converter\converter.ps1
[x] A.I. 1: Refactor to use the centralized logging system.
[P4] [ ] A.I. 2: Review and fix the logic in the main processing loop, specifically the use of `$totalFiles--`, which appears to be incorrect.
[P4] [ ] A.I. 3: Relocate the `ffmpeg_progress_realtime.log` from the `Output` directory to the `Logs` directory for consistency.
step6 - Consolidate_Meta\Consolidate_Meta.ps1
[x] A.I. 1: Refactor to use the centralized logging system.
[x] A.I. 2: Fix parallel processing and result collection logic.
step7 - Remove_RecycleBin\RemoveRecycleBin.ps1
[x] A.I. 1: Refactor to use the centralized logging system.
Step12 - Reconstruction\VideoReconstruction.ps1
[x]  A.I. 1: Consolidate the two ffmpeg helper functions into a single, more flexible function.
Step12 - Reconstruction\ImageReconstruction.ps1
[x] A.I. 1: Refactor to use the centralized logging system.
[x] A.I. 2: Fix bugs in the Invoke-Magick helper function.
step13 - Categorization\Categorize.ps1
[x] A.I. 1: Refactor to use the centralized logging system.
[x] A.I. 2: Fix logging and return values in the parallel processing logic.
step14 - Estimate By Time\EstimateByTime.ps1
[x] A.I. 1: Refactor to use the centralized logging system.
[P6] [ ] A.I. 2: Review the state management logic (cache, undo log, processed log) for robustness and potential error handling gaps.
[x]  A.I. 3: Define the `$logDir` variable locally to ensure cache and undo logs are written to the correct `Logs` directory.
unknown - assign Event\AssignEvent.ps1
[P6] [ ] A.I. 1: Initial review for integration with the main pipeline and centralized logging.

Python Pipeline Scripts
Step0 - Tools\counter\counter.py
[P6] [ ] A.I. 1: General review for clarity and robustness.
step8 - HashAndGroup\HashANDGroupPossibleVideoDuplicates.py
[P1] [ ] A.I. 1: Diagnose and fix the error causing the pipeline to fail.
[P1] [ ] A.I. 2: Run the pipeline to capture the full Python traceback and provide it for analysis.
step8 - HashAndGroup\HashANDGroupPossibleImageDuplicates.py
[P6] [ ] A.I. 1: General review; check for similar errors as the video script.
step9 - RemoveExactDuplicates\RemoveExactVideoDuplicate.py
[P6] [ ] A.I. 1: General review for correctness and robustness.
step9 - RemoveExactDuplicates\RemoveExactImageDuplicate.py
[P6] [ ] A.I. 1: General review for correctness and robustness.
step10 - ShowANDRemoveDuplicate\ShowANDRemoveDuplicateVideo.py
[P6] [ ] A.I. 1: General review for correctness and robustness.
step10 - ShowANDRemoveDuplicate\ShowANDRemoveDuplicateImage.py
[P6] [ ] A.I. 1: General review for correctness and robustness.
step11 - RemoveJunk\RemoveJunkVideo.py
[P6] [ ] A.I. 1: General review for correctness and robustness.
step11 - RemoveJunk\RemoveJunkImage.py
[P6] [ ] A.I. 1: General review for correctness and robustness.
