Invoke-PythonScript Function Documentation

Description:
Runs a Python script asynchronously with redirected output and error streams, capturing progress messages to update the step progress bar, and logs output and errors.

Input Type:
1. ScriptPath [string] — Full path to the Python script file.
2. ActivityName [string] — Display name for progress and logging.
3. Arguments [string[]] — Array of string arguments to pass to the Python script.

Output Type:
✅ [void] — Runs the script and updates GUI progress; throws on failure.

Algorithm (Pseudo-code):
1. Configure process start info with Python executable and arguments.
2. Redirect standard output and error streams.
3. Register event handlers for output and error:
    a. Parse output lines matching `PROGRESS:<percent>|<message>` or `<current> <total> <message>`.
    b. Update step progress bar and PowerShell progress bar accordingly.
    c. Log all other output lines as debug.
    d. Log error output lines as errors.
4. Start the process and begin reading output asynchronously.
5. Wait for process exit; if exit code non-zero, throw an error with captured stderr.
6. Update progress bar to 100% on completion.
7. Unregister event handlers on finish or error.

Function Calls:
- `$Log` for logging
- `Update-StepProgress` to update GUI progress

Possible Issues:
✅ Covered: Real-time progress updates from Python scripts.
❌ Not Covered: Thread safety for UI updates.
❌ Not Covered: Handling of very large output buffers.
